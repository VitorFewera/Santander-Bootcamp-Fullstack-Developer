Constituido sempre por dois elementos, o elemento pai e o elemento filho
	
	display: flex - faz com que os elementos filhos, dentro do elemento pai, fiquem em linha, e 
ocupando o maximo do espaço. 
		- Inicializa o conteiner, agrupa o elementos filho, e organiza de forma que respeitem o 
		espaço do outro - otimo para menus 
	
-----------------------------------------------------------------------------------------------------

	flex-direction: estabele eixo principal definindo assim a direção que os flexs itens são 
	colocados no flex container.

		row(padrão): direção do texto, esquerda para direita.
		row-reverse: sentido oposto a direção do texto
		column: eixo vertical ordenação de cima para baixo.
		column-reverse: eixo vertical, ordenação de baixo para cima

	ex: elemento pai - display: flex
				 flex-dection: row || row-reverse || column || column-reverse

----------------------------------------------------------------------------------------------------

	flex-wrap: Propriedade que define se os itens devem ou nao quebrar a linha. 
			Por padrão, ele nao quebram. Comportamentos:
		
			- nowrap: é o padrão, não permitie a quebra de linha
			- wrap: permitie a quebra de linha assim que um dos flex itens não puder mais 
			ser compactado.
			- wrap-reverse: permite a quebra de linha, porém na direção contraria da linha, ou 
			seja, acima.
----------------------------------------------------------------------------------------------------
	
	flex-flow: É um atalho para o flex-direction e flex-wrap

	Porém seu uso não ´tão comum, visto que quando mudamos o flex-direction para column, mantemos o 
	padrão do flex-wrap que é nowrap.

	Com essa propriedade, podemos chegar no style e colocar:
		flex-flow: row nowrap
	Isso faz com que de uma só vez, colocamos a propriedade de flex-direction e flex-wrap

----------------------------------------------------------------------------------------------------

	justify content: Propriedade vai se encarregar de alinhar os itens dentro do continer de acordo com a
	direção pretendida e tratar da distibuição de espaçamento entre eles.

		- Caso os itens estejam ocupando 100% de todo o conteiner, ela não se aplica.
	
	- flex-start: inicio do container
	- flex-end: final do container
	- center: ao cetro do container	
	- space-between: cria um espaçamento igual entre os elementos
	- space-aroud: OS espaçamentos do meio são duas vezes maiores que o inicial e final.

------------------------------------------------------------------------------------------------------

	Aling-items: trata do alinhamento dos flex itens de acordo com o eixo do container.
	 	- O alinhamento é diferente para quando os itens estão em colunas ou linhas.
		- Permite o alinhamento central no eixo vertical.
		
		Tipos de alinhamento:
			- center: tras todo mundo ao centro
			- stretch: PADRÃO, e os flex itens cresçam igualmente
			- flex-start: alinhamento dos items no inicio
			- flex-end: alinhamento dos items no final
			- baseline: alinhamento de acordo com a linha base da tipografia dos itens

-------------------------------------------------------------------------------------------------------

	aling-content: É a propriedade reponsavel por tratar o alinhamento das linhas do container em relação
	ao eixo vertical do container.
		Precisamos que:
			- O container utilize quebra de linha
			- A altura do container seja maior que a soma das linhas dos itens

		Tipos de alinhamento:
			- center: alinhamento ao centro dos itens
			- stretch: PADRÃO, os flex-items cresçem igualmente
			- flex-start: alinhamento dos itens no final
			- flex-end: alinhamento dos itens no final	
			- space-between: cria um espaçamento igual entre os elementos
			- space-aroud: espaçamento do meio são duas vezes maiores que o inicial e final
-------------------------------------------------------------------------------------------------------

	Flex itens - parte 2 do assuno flex baix

		flex-grow: Define a proporcionalidade de crescimentos dos itens, respeitando o tamanho de seus
					conteudos internos
					OBS: não ira funcionar caso tenhamos justify-content ao nosso flex container
						- So pode ter numeros
-------------------------------------------------------------------------------------------------------

	flex-basis: É a propriedade que estabelece o tamanho inicial do item antes das distribuição de espaço 
				restante dentro dele, usando como base o conteúdo interno disposto.

				auto: caso o item não tenha o tamanho, este será proporcional ao conteudo do item
				px - % - em: são valores exatos previamente definidos
				0(zero): terá relação com a definição do flex-grow
			
----------------------------------------------------------------------------------------------------------

	flex-shrink: relacionada com flex itens, é a propriedade que estabele a capacidade de redução ou compressão
				do tamanho de um item -

----------------------------------------------------------------------------------------------------------------

	flex: propriedade para um atalho ou abreviação de escrita para as propriedades: grow, shrink e basis				

-------------------------------------------------------------------------------------------------------------------

	order: Propriedade para expor uma ordem no itens que receber sua classe

---------------------------------------------------------------------------------------------------------------------

	aling-self: É a propriedade que estabelce o alinhamento de modo individual sobre um detereminado item
				valores: 
					- auto: padrão, ira respeitar a definição de aling-items do container.
					- flex-star: ao inicío do container
					- flex-end: ao final do container
					- center: relativo ao centro de acordo com o eixo
					- stretch: ocupa todo os espaço relativo
					- baseline: utiliza a linha base da tipografia
---------------------------------------------------------------------------------------------------------------------					

